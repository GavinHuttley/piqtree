diff --git a/CMakeLists.txt b/CMakeLists.txt
index 43e287cf..05c97e39 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -68,6 +68,8 @@ set(GCC_MIN_VERSION "4.8")
 project(iqtree)
 add_definitions(-DIQ_TREE)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 # Find Eigen3 library
 if (NOT EIGEN3_INCLUDE_DIR)
     find_package(Eigen3)
@@ -77,6 +79,7 @@ if (NOT EIGEN3_INCLUDE_DIR)
 endif()
 add_definitions(-I${EIGEN3_INCLUDE_DIR})
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # Find Boost library
 find_package(Boost REQUIRED)
 if(Boost_FOUND)
@@ -84,33 +87,44 @@ if(Boost_FOUND)
     add_definitions(-DUSE_BOOST)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 # The version number.
 set (iqtree_VERSION_MAJOR 2)
 set (iqtree_VERSION_MINOR 3)
 set (iqtree_VERSION_PATCH ".4.lib")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 option(BUILD_SHARED_LIBS "Build Shared Libraries" OFF)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 if (CMAKE_C_COMPILER MATCHES "mpic")
     set(IQTREE_FLAGS "${IQTREE_FLAGS} mpi")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 message("IQ-TREE flags : ${IQTREE_FLAGS}")
 
 if (NOT CMAKE_BUILD_TYPE)
     set(CMAKE_BUILD_TYPE "Release")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (CMAKE_BUILD_TYPE STREQUAL "Release")
     message("Build mode   : Release")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (BUILD_LIB STREQUAL "ON")
     message("Build lib    : ON")
 else()
     message("Build lib    : OFF")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (CMAKE_GENERATOR MATCHES "Xcode")
     set(CMAKE_XCODE_ATTRIBUTE_DEBUG_INFORMATION_FORMAT "dwarf-with-dsym")
 #    if (NOT CMAKE_XCODE_ATTRIBUTE_COMPILER_INDEX_STORE_ENABLE)
@@ -118,15 +132,18 @@ if (CMAKE_GENERATOR MATCHES "Xcode")
 #    endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 include_directories("${PROJECT_SOURCE_DIR}")
 include_directories("${PROJECT_SOURCE_DIR}/yaml-cpp/include")
 include_directories(after system "/usr/local/include")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # Include the Terraphast library
 ##################################################################
 option(USE_TERRAPHAST "Use phylogentic terraces library (terraphast)" ON)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_TERRAPHAST)
    set(GCC_MIN_VERSION "5.4")
    add_definitions(-DIQTREE_TERRAPHAST)
@@ -137,19 +154,24 @@ if (USE_TERRAPHAST)
    option(TERRAPHAST_BUILD_TESTS "" OFF)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # Include the LSD2 library
 ##################################################################
 option(USE_LSD2 "Use least square dating (lsd2)" ON)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_LSD2)
     add_definitions(-DUSE_LSD2)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # Check if __ARM_NEON is defined
 #include(cmake_utls/check_neon_exists.cmake)
 set (__ARM_NEON "FALSE")
 set (NEON 0)
+
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (APPLE)
 	execute_process(
       COMMAND uname -m
@@ -176,11 +198,14 @@ elseif (UNIX AND NOT APPLE)  # Unix and Linux
 	endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 ##################################################################
 # Include the CMAPLE library
 ##################################################################
 option(USE_CMAPLE "Integrate CMAPLE" OFF)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_CMAPLE STREQUAL "ON")
 	message("Integrate CMAPLE: ON")
     add_definitions(-DUSE_CMAPLE)
@@ -190,11 +215,13 @@ else()
 	set(TARGET_CMAPLE "")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # build IQTREE library
 ##################################################################
 option(BUILD_LIB "Build IQTREE library" OFF)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (BUILD_LIB STREQUAL "ON")
     message("Build IQTREE library: ON")
     add_definitions(-DBUILD_LIB)
@@ -202,6 +229,7 @@ else()
     message("Build IQTREE library: OFF")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # Detect target platforms
 ##################################################################
@@ -245,11 +273,14 @@ endif()
 # Setup compiler, currently supported GCC, CLANG, MSVC, and ICC
 ##################################################################
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 set(GCC "FALSE")   #  GNU compiler
 set(CLANG "FALSE") # Clang compiler
 set(ICC "FALSE")   # Intel compiler
 set(VCC "FALSE")   # MS Visual C Compiler, note that it is different from MSVC variable
 set(CLANG_UNDER_VS "FALSE") #Clang compiler, used from inside Visual Studio
+
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # using C++11 standard
 # disable AVX for NEON
 if (__ARM_NEON)
@@ -263,6 +294,7 @@ else()
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (CMAKE_COMPILER_IS_GNUCXX)
     message("Compiler      : GNU Compiler (gcc)")
     set(GCC "TRUE")
@@ -318,8 +350,10 @@ else()
 endif()
 message("Compiler version: ${CMAKE_CXX_COMPILER_VERSION}")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 set(EXE_SUFFIX "")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (MSVC)
     # MS Visual Studio environment
     message("Exporting MS Visual Studio projects...")
@@ -342,6 +376,7 @@ if (MSVC)
         endif()
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 # enable link time optimization
 if (IQTREE_FLAGS MATCHES "lto")
@@ -351,12 +386,14 @@ if (IQTREE_FLAGS MATCHES "lto")
         set(COMBINED_FLAGS "${COMBINED_FLAGS} -flto")
     #endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 # for mac arm boost compilation issue
 if (__ARM_NEON AND APPLE)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Dthread_local=")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # for list of libraries to combine with for building IQTREE2 static library
 SET(STATIC_LIBS "${PROJECT_BINARY_DIR}/libiqtree2.a")
 
@@ -388,6 +425,7 @@ else()
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # configure MPI compilation
 ##################################################################
@@ -421,6 +459,7 @@ if (IQTREE_FLAGS MATCHES "mpi")
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 ##################################################################
 # Configure PLL build
@@ -430,10 +469,12 @@ if (IQTREE_FLAGS MATCHES "pll")
     set(EXE_SUFFIX "${EXE_SUFFIX}-pll")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if(IQTREE_FLAGS MATCHES "novx")
     add_definitions(-D__NOAVX__)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # configure OpenMP/PThreads compilation
 # change the executable name if compiled for OpenMP parallel version
@@ -519,6 +560,7 @@ else()
     message("OpenMP        : NONE")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (IQTREE_FLAGS MATCHES "mpi")
     message("MPI           : Yes")
@@ -527,6 +569,8 @@ else()
     message("MPI           : NONE")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
+
 ##################################################################
 # configure SSE/AVX/FMA instructions
 ##################################################################
@@ -554,6 +598,7 @@ elseif (ICC)
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 SET(SSE_FLAGS "-D__SSE3")
 if (VCC)
     set(SSE_FLAGS "${SSE_FLAGS} /arch:SSE2 -D__SSE3__")
@@ -571,6 +616,7 @@ elseif (ICC)
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 SET(FMA_FLAGS "-D__SSE3 -D__AVX")
 if (VCC)
     set(FMA_FLAGS "${FMA_FLAGS} /arch:AVX2")
@@ -594,6 +640,7 @@ elseif (ICC)
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 SET(AVX512_FLAGS "-D__SSE3 -D__AVX")
 if (VCC)
     message("AVX512 not available in Visual C++")
@@ -610,6 +657,7 @@ elseif (ICC)
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # further flag to improve performance
 
 if (IQTREE_FLAGS MATCHES "fma") # AVX+FMA instruction set
@@ -634,6 +682,7 @@ elseif (NOT IQTREE_FLAGS MATCHES "nosse") #SSE intruction set
 endif()
 
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # Setup compiler flags
 ##################################################################
@@ -643,15 +692,18 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COMBINED_FLAGS}")
 set(CMAKE_CXX_FLAGS_PROFILE "${CMAKE_CXX_FLAGS} -fno-inline-functions -fno-inline-functions-called-once -fno-optimize-sibling-calls -fno-default-inline -fno-inline -O2 -fno-omit-frame-pointer -g")
 set(CMAKE_C_FLAGS_PROFILE "${CMAKE_C_FLAGS} -fno-inline-functions -fno-inline-functions-called-once -fno-optimize-sibling-calls -O2 -fno-omit-frame-pointer -g")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if(CLANG AND IQTREE_FLAGS MATCHES "static")
     #set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pthread -Wl,--allow-multiple-definition")
     set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pthread")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (IQTREE_FLAGS MATCHES "libcxx")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (CMAKE_BUILD_TYPE STREQUAL "Release")
     message("C flags       : ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_RELEASE}")
@@ -670,6 +722,7 @@ endif()
 
 message("LINKER flags  : ${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (GCC)
     set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g -fno-inline-functions -fno-inline-functions-called-once -fno-default-inline -fno-inline")
@@ -683,6 +736,7 @@ elseif (CLANG AND NOT CLANG_UNDER_VS)
     set(CMAKE_C_FLAGS_MEM "-g -O1")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # check existence of a few basic functions
 ##################################################################
@@ -693,6 +747,7 @@ check_function_exists (GlobalMemoryStatusEx HAVE_GLOBALMEMORYSTATUSEX)
 check_function_exists (strndup HAVE_STRNDUP)
 check_function_exists (strtok_r HAVE_STRTOK_R)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 find_package(Backtrace)
 
 # configure a header file to pass some of the CMake settings
@@ -738,6 +793,7 @@ if (USE_BOOSTER)
     add_definitions(-DUSE_BOOSTER)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 add_subdirectory(pll)
 add_subdirectory(ncl)
 add_subdirectory(nclextra)
@@ -756,11 +812,13 @@ add_subdirectory(tree)
 add_subdirectory(terrace)
 add_subdirectory(simulator)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_CMAPLE STREQUAL "ON")
 	SET(INSTALL_CMAPLE OFF CACHE BOOL "Disable installation of googletest" FORCE)
 	add_subdirectory(cmaple)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # YAML library
 option(YAML_CPP_BUILD_TESTS "Enable testing" OFF)
 option(YAML_CPP_BUILD_TOOLS "Enable parse tools" OFF)
@@ -774,6 +832,7 @@ if (USE_TERRAPHAST)
    add_subdirectory(terracetphast)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_LSD2)
     add_subdirectory(lsd2)
 endif()
@@ -788,6 +847,7 @@ if (NOT BINARY32 AND NOT IQTREE_FLAGS MATCHES "novx")
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 add_subdirectory(main)
 
 ##################################################################
@@ -813,6 +873,7 @@ if (USE_CMAPLE STREQUAL "ON")
 	)
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if(Backtrace_FOUND)
   include_directories(${Backtrace_INCLUDE_DIR})
   target_link_libraries(iqtree2 ${Backtrace_LIBRARY})
@@ -821,6 +882,7 @@ if(Backtrace_FOUND)
   endif()
 endif(Backtrace_FOUND)
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_BOOSTER)
     target_link_libraries(iqtree2 booster)
     SET(STATIC_LIBS "${STATIC_LIBS}" "${PROJECT_BINARY_DIR}/booster/libbooster.a")
@@ -855,6 +917,7 @@ if (NOT IQTREE_FLAGS MATCHES "avx" AND NOT IQTREE_FLAGS MATCHES "fma")
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 ##################################################################
 # setup linking flags
 ##################################################################
@@ -866,10 +929,12 @@ else()
     set(PLATFORM_LIB "m")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (IQTREE_FLAGS MATCHES "libcxx")
     set(STD_LIB "c++abi")
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 set(THREAD_LIB "")
 if (NOT IQTREE_FLAGS MATCHES "single")
     if (MSVC)
@@ -903,18 +968,22 @@ if (NOT IQTREE_FLAGS MATCHES "single")
 
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # basic linking librararies
 
 target_link_libraries(iqtree2 pll ncl nclextra utils pda lbfgsb whtest sprng vectorclass model
     gsl alignment tree simulator terrace yaml-cpp phyloYAML main ${TARGET_CMAPLE} ${PLATFORM_LIB} ${STD_LIB} ${THREAD_LIB} ${ATOMIC_LIB})
 
+    set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 SET(STATIC_LIBS "${STATIC_LIBS}" "${PROJECT_BINARY_DIR}/pll/libpll.a" "${PROJECT_BINARY_DIR}/ncl/libncl.a" "${PROJECT_BINARY_DIR}/nclextra/libnclextra.a" "${PROJECT_BINARY_DIR}/utils/libutils.a" "${PROJECT_BINARY_DIR}/pda/libpda.a" "${PROJECT_BINARY_DIR}/lbfgsb/liblbfgsb.a" "${PROJECT_BINARY_DIR}/whtest/libwhtest.a" "${PROJECT_BINARY_DIR}/sprng/libsprng.a" "${PROJECT_BINARY_DIR}/vectorclass/libvectorclass.a" "${PROJECT_BINARY_DIR}/model/libmodel.a" "${PROJECT_BINARY_DIR}/gsl/libgsl.a" "${PROJECT_BINARY_DIR}/alignment/libalignment.a" "${PROJECT_BINARY_DIR}/tree/libtree.a" "${PROJECT_BINARY_DIR}/simulator/libsimulator.a" "${PROJECT_BINARY_DIR}/terrace/libterrace.a" "${PROJECT_BINARY_DIR}/yaml-cpp/libyaml-cpp.a" "${PROJECT_BINARY_DIR}/phylo-yaml/libphyloYAML.a" "${PROJECT_BINARY_DIR}/main/libmain.a")
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_CMAPLE STREQUAL "ON")
 	target_link_libraries(iqtree2-aa pll ncl nclextra utils pda lbfgsb whtest sprng vectorclass model
     	gsl alignment tree simulator terrace yaml-cpp phyloYAML main-aa maple-aa ${PLATFORM_LIB} ${STD_LIB} ${THREAD_LIB} ${ATOMIC_LIB})
 endif()
 	
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_TERRAPHAST)
    target_link_libraries(iqtree2 terracetphast)
    SET(STATIC_LIBS "${STATIC_LIBS}" "${PROJECT_BINARY_DIR}/terracetphast/libterracetphast.a" "${PROJECT_BINARY_DIR}/terraphast/libterraphast.a")
@@ -923,6 +992,7 @@ if (USE_TERRAPHAST)
    endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (USE_LSD2)
     target_link_libraries(iqtree2 lsd2)
     SET(STATIC_LIBS "${STATIC_LIBS}" "${PROJECT_BINARY_DIR}/lsd2/liblsd2.a")
@@ -931,6 +1001,7 @@ if (USE_LSD2)
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if (NOT IQTREE_FLAGS MATCHES "nosse")
     target_link_libraries(iqtree2 kernelsse)
     SET(STATIC_LIBS "${STATIC_LIBS}" "${PROJECT_BINARY_DIR}/libkernelsse.a")
@@ -939,6 +1010,7 @@ if (NOT IQTREE_FLAGS MATCHES "nosse")
     endif()
 endif()
 
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 # MPI libraries
 if (IQTREE_FLAGS MATCHES "mpi")
     if (NOT CMAKE_CXX_COMPILER MATCHES "mpi")
@@ -948,6 +1020,7 @@ if (IQTREE_FLAGS MATCHES "mpi")
         endif()
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 # SSE, AVX etc. libraries
 if (NOT BINARY32 AND NOT IQTREE_FLAGS MATCHES "novx")
@@ -964,6 +1037,7 @@ if (NOT BINARY32 AND NOT IQTREE_FLAGS MATCHES "novx")
         endif()
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 # setup the executable name
 ##################################################################
@@ -986,12 +1060,14 @@ if (NOT IQTREE_FLAGS MATCHES "nostrip" AND CMAKE_BUILD_TYPE STREQUAL "Release" A
         endif()
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (MSVC)
     set (BINARY_DIR "${PROJECT_BINARY_DIR}/Release")
 else()
     set (BINARY_DIR "${PROJECT_BINARY_DIR}")
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (WIN32)
     if (MSVC)
@@ -1013,10 +1089,12 @@ if (WIN32)
         endif()
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 ##############################################################
 # CREATE A STATIC LIBRARY
 ##############################################################
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (BUILD_LIB STREQUAL "ON")
     if(APPLE)
@@ -1036,6 +1114,7 @@ if (BUILD_LIB STREQUAL "ON")
             VERBATIM)
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 ##############################################################
 # add the install targets
@@ -1048,6 +1127,7 @@ install (FILES "${PROJECT_SOURCE_DIR}/example/models.nex" DESTINATION .)
 install (FILES "${PROJECT_SOURCE_DIR}/example/example.phy" DESTINATION .)
 install (FILES "${PROJECT_SOURCE_DIR}/example/example.nex" DESTINATION .)
 install (FILES "${PROJECT_SOURCE_DIR}/example/example.cf" DESTINATION .)
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (WIN32)
     install (FILES "${BINARY_DIR}/iqtree2${EXE_SUFFIX}-click.exe" DESTINATION bin)
@@ -1075,6 +1155,7 @@ if (WIN32)
     endif()
 
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 ##############################################################
 # build a CPack driven installer package
@@ -1092,11 +1173,13 @@ else()
   set(CPACK_GENERATOR "TGZ")
   set(CPACK_SOURCE_GENERATOR "TGZ")
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 #set(CPACK_SOURCE_PACKAGE_FILE_NAME
 #  "${CMAKE_PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}")
 set(CPACK_SOURCE_IGNORE_FILES
   "/build.*/;/debug.*/;/examples/;/test_scripts/;/manual/;/.bzr/;~$;/\\\\.svn/;/\\\\.git/;/pllrepo/;${CPACK_SOURCE_IGNORE_FILES}")
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 set (SYSTEM_NAME "${CMAKE_SYSTEM_NAME}")
 if (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
@@ -1108,6 +1191,7 @@ if (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
         set (SYSTEM_NAME "macOS-intel")
     endif()
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (NOT APPLE AND UNIX)
     if (__ARM_NEON)
@@ -1120,10 +1204,12 @@ endif()
 if (BINARY32)
     set (SYSTEM_NAME "${SYSTEM_NAME}32")
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 if (IQTREE_FLAGS MATCHES "KNL")
     set (SYSTEM_NAME "${SYSTEM_NAME}KNL")
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 set(CPACK_PACKAGE_FILE_NAME
     "${CMAKE_PROJECT_NAME}${EXE_SUFFIX}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}${CPACK_PACKAGE_VERSION_PATCH}-${SYSTEM_NAME}")
@@ -1131,7 +1217,8 @@ set(CPACK_PACKAGE_FILE_NAME
 if (NOT APPLE)
     set(CPACK_STRIP_FILES TRUE)
 endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
 include (CPack)
 
-#add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
+#add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
\ No newline at end of file
diff --git a/simulator/alisimulator.cpp b/simulator/alisimulator.cpp
index 0e0d30d3..dd7c6e9a 100644
--- a/simulator/alisimulator.cpp
+++ b/simulator/alisimulator.cpp
@@ -1742,7 +1742,12 @@ void AliSimulator::mergeAndWriteSeqIndelFunDi(int thread_id, ostream &out, int s
             (*it)->node->sequence->num_threads_done_simulation++;
             
             // make sure only one thread is selected to write the output
+            
+            #ifdef _OPENMP
             if ((*it)->node->sequence->num_threads_done_simulation == omp_get_num_threads())
+            #else
+            if ((*it)->node->sequence->num_threads_done_simulation == 1)
+            #endif
                 this_thread_write_output = true;
         }
         
diff --git a/tree/iqtreemix.cpp b/tree/iqtreemix.cpp
index 27d56402..7d7d3c52 100644
--- a/tree/iqtreemix.cpp
+++ b/tree/iqtreemix.cpp
@@ -693,16 +693,20 @@ double IQTreeMix::computeLikelihood(double *pattern_lh, bool save_log_value) {
         storeTree0RHAS();
     }
     
+    #ifdef _OPENMP
     if (isNestedOpenmp) {
         // omp_set_nested(1);
         omp_set_max_active_levels(2);
     }
+    #endif
 
     // compute likelihood for each tree
     #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
     for (size_t t=0; t<ntree; t++) {
         if (isNestedOpenmp) {
+            #ifdef _OPENMP
             omp_set_num_threads(at(t)->num_threads);
+            #endif
         }
         double* pattern_lh_tree = _ptn_like_cat + nptn * t;
         // save the site rate's tree
@@ -725,8 +729,10 @@ double IQTreeMix::computeLikelihood(double *pattern_lh, bool save_log_value) {
     
     if (isNestedOpenmp) {
         // omp_set_nested(0);
+        #ifdef _OPENMP
         omp_set_max_active_levels(1);
         omp_set_num_threads(num_threads);
+        #endif
     }
 
     // reorganize the array
@@ -814,12 +820,16 @@ double IQTreeMix::computePatternLhCat(SiteLoglType wsl) {
         // compute likelihood for each tree
         if (isNestedOpenmp) {
             // omp_set_nested(1);
+            #ifdef _OPENMP
             omp_set_max_active_levels(2);
+            #endif
         }
         #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
         for (size_t t=0; t<ntree; t++) {
             if (isNestedOpenmp) {
+                #ifdef _OPENMP
                 omp_set_num_threads(at(t)->num_threads);
+                #endif
             }
             double* pattern_lh_tree = _ptn_like_cat + t * nptn;
             // save the site rate's tree
@@ -839,8 +849,10 @@ double IQTreeMix::computePatternLhCat(SiteLoglType wsl) {
         }
         if (isNestedOpenmp) {
             // omp_set_nested(0);
+            #ifdef _OPENMP
             omp_set_max_active_levels(1);
             omp_set_num_threads(num_threads);
+            #endif
         }
 
         // reorganize the array
@@ -910,12 +922,16 @@ double IQTreeMix::computePatternLhCat(SiteLoglType wsl) {
         nmix = at(0)->getModel()->getNMixtures();
         if (isNestedOpenmp) {
             // omp_set_nested(1);
+            #ifdef _OPENMP
             omp_set_max_active_levels(2);
+            #endif
         }
         #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
         for (size_t t = 0; t < ntree; t++) {
             if (isNestedOpenmp) {
+                #ifdef _OPENMP
                 omp_set_num_threads(at(t)->num_threads);
+                #endif
             }
             if (isLinkSiteRate && t > 0) {
                 // Replace the RHAS variables of tree t by those of tree 0
@@ -928,8 +944,10 @@ double IQTreeMix::computePatternLhCat(SiteLoglType wsl) {
         }
         if (isNestedOpenmp) {
             // omp_set_nested(0);
+            #ifdef _OPENMP
             omp_set_max_active_levels(1);
             omp_set_num_threads(num_threads);
+            #endif
         }
 
         // compute the overall _pattern_lh_cat
@@ -1058,12 +1076,16 @@ void IQTreeMix::computePatternLikelihood(double *pattern_lh, double *cur_logl,
     // compute likelihood for each tree
     if (isNestedOpenmp) {
         // omp_set_nested(1);
+        #ifdef _OPENMP
         omp_set_max_active_levels(2);
+        #endif
     }
     #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
     for (size_t t=0; t<ntree; t++) {
         if (isNestedOpenmp) {
+            #ifdef _OPENMP
             omp_set_num_threads(at(t)->num_threads);
+            #endif
         }
         double* pattern_lh_tree = _ptn_like_cat + t * nptn;
         // save the site rate's tree
@@ -1083,8 +1105,10 @@ void IQTreeMix::computePatternLikelihood(double *pattern_lh, double *cur_logl,
     }
     if (isNestedOpenmp) {
         // omp_set_nested(0);
+        #ifdef _OPENMP
         omp_set_max_active_levels(1);
         omp_set_num_threads(num_threads);
+        #endif
     }
 
     // reorganize the array
@@ -1206,19 +1230,25 @@ double IQTreeMix::optimizeAllBranches(int my_iterations, double tolerance, int m
 
     if (isNestedOpenmp) {
         // omp_set_nested(1);
+        #ifdef _OPENMP
         omp_set_max_active_levels(2);
+        #endif
     }
     #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
     for (size_t i=0; i<ntree; i++) {
         if (isNestedOpenmp) {
+            #ifdef _OPENMP
             omp_set_num_threads(at(i)->num_threads);
+            #endif
         }
         optimizeAllBranchesOneTree(i, my_iterations, tolerance, maxNRStep);
     }
     if (isNestedOpenmp) {
         // omp_set_nested(0);
+        #ifdef _OPENMP
         omp_set_max_active_levels(1);
         omp_set_num_threads(num_threads);
+        #endif
     }
 
     return computeLikelihood();
@@ -1895,20 +1925,26 @@ void IQTreeMix::optimizeTreesSeparately(bool printInfo, double logl_epsilon, dou
 
     if (isNestedOpenmp) {
         // omp_set_nested(1);
+        #ifdef _OPENMP
         omp_set_max_active_levels(2);
+        #endif
     }
     #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
     for (size_t i=0; i<ntree; i++) {
         // optimize tree i
         if (isNestedOpenmp) {
+            #ifdef _OPENMP
             omp_set_num_threads(at(i)->num_threads);
+            #endif
         }
         optimizeTreeSeparately(i, printInfo, logl_epsilon, gradient_epsilon);
     }
     if (isNestedOpenmp) {
         // omp_set_nested(0);
+        #ifdef _OPENMP
         omp_set_max_active_levels(1);
         omp_set_num_threads(num_threads);
+        #endif
     }
 }
 
@@ -2293,19 +2329,25 @@ string IQTreeMix::optimizeModelParameters(bool printInfo, double logl_epsilon) {
                         // call computeFreqArray() once after all optimizeParameters()
                         if (isNestedOpenmp) {
                             // omp_set_nested(1);
+                            #ifdef _OPENMP
                             omp_set_max_active_levels(2);
+                            #endif
                         }
                         #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
                         for (int k=0; k<ntree; k++) {
                             if (isNestedOpenmp) {
+                                #ifdef _OPENMP
                                 omp_set_num_threads(at(k)->num_threads);
+                                #endif
                             }
                             models[k]->optimizeParameters(gradient_epsilon);
                         }
                         if (isNestedOpenmp) {
                             // omp_set_nested(0);
+                            #ifdef _OPENMP
                             omp_set_max_active_levels(1);
                             omp_set_num_threads(num_threads);
+                            #endif
                         }
                         computeFreqArray(pattern_mix_lh, true);
                     }
@@ -3073,12 +3115,16 @@ void IQTreeMix::computeParsimony() {
     // compute the parsimony scores along patterns for each tree
     if (isNestedOpenmp) {
         // omp_set_nested(1);
+        #ifdef _OPENMP
         omp_set_max_active_levels(2);
+        #endif
     }
     #pragma omp parallel for schedule(static) num_threads(ntree) if (isNestedOpenmp)
     for (size_t t=0; t<ntree; t++) {
         if (isNestedOpenmp) {
+            #ifdef _OPENMP
             omp_set_num_threads(at(t)->num_threads);
+            #endif
         }
         UINT* curr_ptn_scores = ptn_scores + t * noptn;
         at(t)->initCostMatrix(CM_UNIFORM);
@@ -3089,8 +3135,10 @@ void IQTreeMix::computeParsimony() {
     }
     if (isNestedOpenmp) {
         // omp_set_nested(0);
+        #ifdef _OPENMP
         omp_set_max_active_levels(1);
         omp_set_num_threads(num_threads);
+        #endif
     }
 
     // build opattern2id
diff --git a/utils/gzstream.cpp b/utils/gzstream.cpp
index f7dfd6c6..3d13e43e 100644
--- a/utils/gzstream.cpp
+++ b/utils/gzstream.cpp
@@ -83,14 +83,14 @@ gzstreambuf* gzstreambuf::open( const char* name, int open_mode, int compression
     }
     //FINISH - Determining compressed_length
     
-    file = gzopen( name, fmode);
+    file = 0;//( name, fmode);
     if (file == 0) {
         return (gzstreambuf*)0;
     }
     opened = 1;
     
     if ( mode & std::ios::out) {
-        gzsetparams(file, compression_level, Z_DEFAULT_STRATEGY );
+        //(file, compression_level, Z_DEFAULT_STRATEGY );
     }
     
     return this;
@@ -100,7 +100,7 @@ gzstreambuf * gzstreambuf::close() {
     if ( is_open()) {
         sync();
         opened = 0;
-        if ( gzclose( file) == Z_OK)
+        // if ( ( file) == Z_OK)
             return this;
     }
     return (gzstreambuf*)0;
@@ -118,11 +118,11 @@ int gzstreambuf::underflow() { // used for input buffer only
         n_putback = 4;
     memcpy( buffer + (4 - n_putback), gptr() - n_putback, n_putback);
 
-    int num = gzread( file, buffer+4, bufferSize-4);
+    int num = 0;//( file, buffer+4, bufferSize-4);
     if (num <= 0) // ERROR or EOF
         return EOF;
     
-    compressed_position = gzoffset(file);
+    compressed_position = 0;//(file);
     
     // reset buffer pointers
     setg( buffer + (4 - n_putback),   // beginning of putback area
@@ -137,7 +137,7 @@ int gzstreambuf::flush_buffer() {
     // Separate the writing of the buffer from overflow() and
     // sync() operation.
     int  w = static_cast<int> ( pptr() - pbase() );
-    long wDone = gzwrite( file, pbase(), w);
+    long wDone = w;//( file, pbase(), w);
     if ( wDone != w)
         return EOF;
     pbump( -w);
@@ -201,7 +201,7 @@ void gzstreambase::close() {
 }
 
 z_off_t gzstreambase::get_raw_bytes() {
-	return gztell(buf.file);
+	return 0;// (buf.file);
 }
 
 #ifdef GZSTREAM_NAMESPACE
